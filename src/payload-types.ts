/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    toeic: Toeic;
    'toeic-attempts': ToeicAttempt;
    progress: Progress;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    toeic: ToeicSelect<false> | ToeicSelect<true>;
    'toeic-attempts': ToeicAttemptsSelect<false> | ToeicAttemptsSelect<true>;
    progress: ProgressSelect<false> | ProgressSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  fullname: string;
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toeic".
 */
export interface Toeic {
  id: number;
  title: string;
  description?: string | null;
  duration: number;
  totalQuestions: number;
  difficulty?: ('easy' | 'medium' | 'hard') | null;
  listeningSection: {
    duration: number;
    totalQuestions: number;
    parts?:
      | {
          partNumber: number;
          title: string;
          description?: string | null;
          questionCount: number;
          questions?:
            | {
                questionNumber: number;
                questionText?: string | null;
                audioFile?: (number | null) | Media;
                imageFile?: (number | null) | Media;
                options?:
                  | {
                      option: string;
                      isCorrect?: boolean | null;
                      id?: string | null;
                    }[]
                  | null;
                correctAnswer: string;
                explanation?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  readingSection: {
    duration: number;
    totalQuestions: number;
    parts?:
      | {
          partNumber: number;
          title: string;
          description?: string | null;
          questionCount: number;
          passages?:
            | {
                passageNumber: number;
                title?: string | null;
                content?: {
                  root: {
                    type: string;
                    children: {
                      type: any;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                } | null;
                questions?:
                  | {
                      questionNumber: number;
                      questionText: string;
                      options?:
                        | {
                            option: string;
                            isCorrect?: boolean | null;
                            id?: string | null;
                          }[]
                        | null;
                      correctAnswer: string;
                      explanation?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  scoring: {
    listeningMaxScore: number;
    readingMaxScore: number;
    totalMaxScore: number;
  };
  metadata?: {
    level?: ('beginner' | 'intermediate' | 'advanced') | null;
    tags?:
      | {
          tag: string;
          id?: string | null;
        }[]
      | null;
    isPublished?: boolean | null;
    createdBy?: (number | null) | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toeic-attempts".
 */
export interface ToeicAttempt {
  id: number;
  user: number | User;
  test: number | Toeic;
  attemptTitle: string;
  timeSpent?: number | null;
  scores?: {
    listening?: number | null;
    reading?: number | null;
    total?: number | null;
  };
  sectionScores?: {
    listeningDetails?: {
      part1?: number | null;
      part2?: number | null;
      part3?: number | null;
      part4?: number | null;
    };
    readingDetails?: {
      part5?: number | null;
      part6?: number | null;
      part7?: number | null;
    };
  };
  answers?:
    | {
        questionNumber: number;
        section: 'listening' | 'reading';
        part: number;
        userAnswer?: string | null;
        correctAnswer?: string | null;
        isCorrect?: boolean | null;
        timeSpent?: number | null;
        difficulty?: ('easy' | 'medium' | 'hard') | null;
        id?: string | null;
      }[]
    | null;
  status?: ('in_progress' | 'completed' | 'abandoned' | 'timeout') | null;
  notes?: string | null;
  attemptNumber?: number | null;
  improvement?: {
    previousAttempt?: (number | null) | ToeicAttempt;
  };
  analytics?: {
    accuracyRate?: number | null;
    averageTimePerQuestion?: number | null;
    weakAreas?:
      | {
          part: number;
          accuracy: number;
          id?: string | null;
        }[]
      | null;
    strongAreas?:
      | {
          part: number;
          accuracy: number;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress".
 */
export interface Progress {
  id: number;
  user: number | User;
  skill: 'toeic' | 'ielts';
  studyStreak?: number | null;
  lastStudyDate?: string | null;
  totalTestsCompleted?: number | null;
  averageScore?: number | null;
  skillsAverage?:
    | {
        subSkill: 'listening' | 'reading' | 'writing' | 'speaking';
        averageScore?: number | null;
        id?: string | null;
      }[]
    | null;
  bestScore?: number | null;
  learningGoals?: {
    targetScore?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'toeic';
        value: number | Toeic;
      } | null)
    | ({
        relationTo: 'toeic-attempts';
        value: number | ToeicAttempt;
      } | null)
    | ({
        relationTo: 'progress';
        value: number | Progress;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  fullname?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toeic_select".
 */
export interface ToeicSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  duration?: T;
  totalQuestions?: T;
  difficulty?: T;
  listeningSection?:
    | T
    | {
        duration?: T;
        totalQuestions?: T;
        parts?:
          | T
          | {
              partNumber?: T;
              title?: T;
              description?: T;
              questionCount?: T;
              questions?:
                | T
                | {
                    questionNumber?: T;
                    questionText?: T;
                    audioFile?: T;
                    imageFile?: T;
                    options?:
                      | T
                      | {
                          option?: T;
                          isCorrect?: T;
                          id?: T;
                        };
                    correctAnswer?: T;
                    explanation?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  readingSection?:
    | T
    | {
        duration?: T;
        totalQuestions?: T;
        parts?:
          | T
          | {
              partNumber?: T;
              title?: T;
              description?: T;
              questionCount?: T;
              passages?:
                | T
                | {
                    passageNumber?: T;
                    title?: T;
                    content?: T;
                    questions?:
                      | T
                      | {
                          questionNumber?: T;
                          questionText?: T;
                          options?:
                            | T
                            | {
                                option?: T;
                                isCorrect?: T;
                                id?: T;
                              };
                          correctAnswer?: T;
                          explanation?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  scoring?:
    | T
    | {
        listeningMaxScore?: T;
        readingMaxScore?: T;
        totalMaxScore?: T;
      };
  metadata?:
    | T
    | {
        level?: T;
        tags?:
          | T
          | {
              tag?: T;
              id?: T;
            };
        isPublished?: T;
        createdBy?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toeic-attempts_select".
 */
export interface ToeicAttemptsSelect<T extends boolean = true> {
  user?: T;
  test?: T;
  attemptTitle?: T;
  timeSpent?: T;
  scores?:
    | T
    | {
        listening?: T;
        reading?: T;
        total?: T;
      };
  sectionScores?:
    | T
    | {
        listeningDetails?:
          | T
          | {
              part1?: T;
              part2?: T;
              part3?: T;
              part4?: T;
            };
        readingDetails?:
          | T
          | {
              part5?: T;
              part6?: T;
              part7?: T;
            };
      };
  answers?:
    | T
    | {
        questionNumber?: T;
        section?: T;
        part?: T;
        userAnswer?: T;
        correctAnswer?: T;
        isCorrect?: T;
        timeSpent?: T;
        difficulty?: T;
        id?: T;
      };
  status?: T;
  notes?: T;
  attemptNumber?: T;
  improvement?:
    | T
    | {
        previousAttempt?: T;
      };
  analytics?:
    | T
    | {
        accuracyRate?: T;
        averageTimePerQuestion?: T;
        weakAreas?:
          | T
          | {
              part?: T;
              accuracy?: T;
              id?: T;
            };
        strongAreas?:
          | T
          | {
              part?: T;
              accuracy?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress_select".
 */
export interface ProgressSelect<T extends boolean = true> {
  user?: T;
  skill?: T;
  studyStreak?: T;
  lastStudyDate?: T;
  totalTestsCompleted?: T;
  averageScore?: T;
  skillsAverage?:
    | T
    | {
        subSkill?: T;
        averageScore?: T;
        id?: T;
      };
  bestScore?: T;
  learningGoals?:
    | T
    | {
        targetScore?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}